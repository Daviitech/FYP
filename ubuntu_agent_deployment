#!/bin/bash
# ubuntu_desktop_agent_deploy.sh
# Automated deployment script for Zabbix Agent on Ubuntu Desktop systems
# Part of the Network Monitoring Project

# Exit on any error
set -e

# Color formatting for better readability
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Banner
echo -e "${BLUE}"
echo "====================================================="
echo " Zabbix Agent Deployment for Ubuntu Desktop          "
echo " Network Monitoring Project                          "
echo "====================================================="
echo -e "${NC}"

# Default Zabbix server IP
DEFAULT_SERVER_IP="192.168.1.10"
SERVER_IP=$DEFAULT_SERVER_IP

# Check if custom server IP provided
if [ ! -z "$1" ]; then
    SERVER_IP="$1"
fi

# Get hostname
HOST_NAME=$(hostname)

echo -e "${YELLOW}Starting Zabbix agent installation for${NC} ${GREEN}$HOST_NAME${NC}"
echo -e "${YELLOW}Agent will connect to Zabbix server at:${NC} ${GREEN}$SERVER_IP${NC}"

# Check for root privileges
if [ "$(id -u)" != "0" ]; then
   echo -e "${RED}This script must be run as root${NC}" 
   echo -e "Try: ${YELLOW}sudo $0 $SERVER_IP${NC}"
   exit 1
fi

# Detect Ubuntu version
UBUNTU_VERSION=$(lsb_release -rs)
UBUNTU_CODENAME=$(lsb_release -cs)
echo -e "${YELLOW}Detected Ubuntu version:${NC} ${GREEN}$UBUNTU_VERSION ($UBUNTU_CODENAME)${NC}"

# Confirm before proceeding
echo -e "${YELLOW}This script will install Zabbix Agent on your Ubuntu Desktop system.${NC}"
read -p "Do you want to continue? (y/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${RED}Installation aborted.${NC}"
    exit 1
fi

echo -e "\n${BLUE}[1/8]${NC} ${YELLOW}Adding Zabbix repository...${NC}"
# Add Zabbix repository based on Ubuntu version
wget -q https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4+ubuntu${UBUNTU_VERSION}_all.deb -O /tmp/zabbix-release.deb
dpkg -i /tmp/zabbix-release.deb
apt update

echo -e "\n${BLUE}[2/8]${NC} ${YELLOW}Installing Zabbix agent...${NC}"
# Install agent
apt install -y zabbix-agent

echo -e "\n${BLUE}[3/8]${NC} ${YELLOW}Configuring agent...${NC}"
# Backup original configuration
cp /etc/zabbix/zabbix_agentd.conf /etc/zabbix/zabbix_agentd.conf.bak

# Configure agent
cat > /etc/zabbix/zabbix_agentd.conf <<EOF
# Zabbix Agent Configuration for Ubuntu Desktop
# Generated by deployment script

PidFile=/var/run/zabbix/zabbix_agentd.pid
LogFile=/var/log/zabbix/zabbix_agentd.log
LogFileSize=0
Server=$SERVER_IP
ServerActive=$SERVER_IP
Hostname=$HOST_NAME
Include=/etc/zabbix/zabbix_agentd.d/*.conf

# Security configuration
TLSConnect=psk
TLSAccept=psk
TLSPSKIdentity=PSK 001
TLSPSKFile=/etc/zabbix/zabbix_agentd.psk

# Enable remote commands for authorized actions
EnableRemoteCommands=1
LogRemoteCommands=1

# Ubuntu Desktop specific settings
Timeout=30
BufferSize=100
EOF

echo -e "\n${BLUE}[4/8]${NC} ${YELLOW}Setting up secure communications...${NC}"
# Generate random PSK key
openssl rand -hex 32 > /etc/zabbix/zabbix_agentd.psk
chmod 600 /etc/zabbix/zabbix_agentd.psk

# Store PSK key for reference (securely)
PSK_KEY=$(cat /etc/zabbix/zabbix_agentd.psk)
echo -e "${GREEN}Generated PSK key:${NC} $PSK_KEY"
echo -e "${YELLOW}Store this key securely - you'll need it to configure the server.${NC}"

echo -e "\n${BLUE}[5/8]${NC} ${YELLOW}Setting up desktop monitoring parameters...${NC}"
# Create directory for custom scripts if it doesn't exist
mkdir -p /etc/zabbix/scripts
chmod 755 /etc/zabbix/scripts

# Create a script to monitor desktop-specific items
cat > /etc/zabbix/scripts/desktop_monitor.sh <<EOF
#!/bin/bash

# Script to monitor Ubuntu Desktop specific metrics
# Usage: ./desktop_monitor.sh [parameter]

case "\$1" in
    "gui_session")
        # Check if there's an active GUI session
        w | grep -q " :[0-9]" && echo "1" || echo "0"
        ;;
    "active_user")
        # Get current active user
        who | grep " :[0-9]" | head -1 | awk '{print \$1}'
        ;;
    "screen_locked")
        # Check if screen is locked (for GNOME)
        su - \$(who | grep " :[0-9]" | head -1 | awk '{print \$1}') -c "export DISPLAY=:0 && gdbus call --session --dest org.gnome.ScreenSaver --object-path /org/gnome/ScreenSaver --method org.gnome.ScreenSaver.GetActive" | grep -q "true" && echo "1" || echo "0"
        ;;
    "battery")
        # Get battery percentage if available
        if [ -d /sys/class/power_supply/BAT0 ]; then
            cat /sys/class/power_supply/BAT0/capacity
        else
            echo "ZBX_NOTSUPPORTED"
        fi
        ;;
    "battery_status")
        # Get battery charging status if available
        if [ -d /sys/class/power_supply/BAT0 ]; then
            cat /sys/class/power_supply/BAT0/status
        else
            echo "ZBX_NOTSUPPORTED"
        fi
        ;;
    "updates_available")
        # Count available updates
        apt list --upgradable 2>/dev/null | grep -c upgradable
        ;;
    "desktop_environment")
        # Identify desktop environment
        echo \$XDG_CURRENT_DESKTOP
        ;;
    *)
        echo "ZBX_NOTSUPPORTED"
        ;;
esac
EOF

chmod 755 /etc/zabbix/scripts/desktop_monitor.sh

# Add user parameter for desktop monitoring
cat > /etc/zabbix/zabbix_agentd.d/desktop_monitoring.conf <<EOF
# Ubuntu Desktop specific parameters
UserParameter=desktop.gui_session,/etc/zabbix/scripts/desktop_monitor.sh gui_session
UserParameter=desktop.active_user,/etc/zabbix/scripts/desktop_monitor.sh active_user
UserParameter=desktop.screen_locked,/etc/zabbix/scripts/desktop_monitor.sh screen_locked
UserParameter=desktop.battery,/etc/zabbix/scripts/desktop_monitor.sh battery
UserParameter=desktop.battery_status,/etc/zabbix/scripts/desktop_monitor.sh battery_status
UserParameter=desktop.updates_available,/etc/zabbix/scripts/desktop_monitor.sh updates_available
UserParameter=desktop.environment,/etc/zabbix/scripts/desktop_monitor.sh desktop_environment

# Additional system monitoring
UserParameter=system.apt.updates,apt list --upgradable 2>/dev/null | grep -c upgradable
UserParameter=system.users.count,who | wc -l
UserParameter=system.display.count,ls -la /tmp/.X11-unix/ | grep -c X
EOF

echo -e "\n${BLUE}[6/8]${NC} ${YELLOW}Adding desktop application monitoring...${NC}"
# Create script for monitoring installed applications
cat > /etc/zabbix/scripts/app_monitor.sh <<EOF
#!/bin/bash

# Script to monitor specific desktop applications
# Usage: ./app_monitor.sh [application]

is_installed() {
    which "\$1" > /dev/null 2>&1 && echo "1" || echo "0"
}

is_running() {
    pgrep -x "\$1" > /dev/null 2>&1 && echo "1" || echo "0"
}

case "\$1" in
    "firefox_installed")
        is_installed firefox
        ;;
    "firefox_running")
        is_running firefox
        ;;
    "chrome_installed")
        is_installed google-chrome
        ;;
    "chrome_running")
        is_running chrome
        ;;
    "libreoffice_installed")
        is_installed libreoffice
        ;;
    "libreoffice_running")
        pgrep -f libreoffice > /dev/null 2>&1 && echo "1" || echo "0"
        ;;
    "thunderbird_installed")
        is_installed thunderbird
        ;;
    "thunderbird_running")
        is_running thunderbird
        ;;
